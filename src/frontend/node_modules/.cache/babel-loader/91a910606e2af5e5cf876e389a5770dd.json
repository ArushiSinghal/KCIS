{"ast":null,"code":"var _jsxFileName = \"/home/swastik/project/dass05/src/FRONTEND/src/components/Modal.js\";\nimport { Modal } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport Slider from '@material-ui/core/Slider';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport './control.css';\nimport axios from 'axios';\nimport './Modal.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconsole.log(\"YCK\");\n\nconst modal = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-wrapper\",\n    style: {\n      transform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n      opacity: props.show ? '1' : '0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Modal.Dialog, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Control AC\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: props.close,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Close\")))));\n};\n\nconst PrettoSlider = withStyles({\n  root: {\n    color: '#0041C2',\n    height: 5\n  },\n  thumb: {\n    height: 20,\n    width: 20,\n    backgroundColor: '#0041C2',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -5,\n    '&:focus,&:hover,&$active': {\n      boxShadow: 'inherit'\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)'\n  },\n  track: {\n    height: 5,\n    borderRadius: 4\n  },\n  rail: {\n    height: 5,\n    borderRadius: 4\n  }\n})(Slider);\nvar tempSlider; // class modal extends Component {\n//   constructor(props){\n//     super(props)\n//     this.state={\n//       isOn: \"off\",\n//       tempvalue:20,\n//     };\n//   }\n//   render(){\n//     if (this.state.isOn == \"on\") {\n//       tempSlider = \n//       <div>\n//           <InputLabel>Temperature</InputLabel>\n//           <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" defaultValue={20} min={16} max={30} onChange={this.setTemp} />\n//       </div>\n//   } else {\n//       tempSlider = <><br/><br/><br/></>\n//   }\n//     return (\n//       <div>\n//         <div className=\"modal-wrapper\" style={{transform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',opacity: props.show ? '1' : '0'}}>\n//             <Modal.Dialog>\n//             <Modal.Header closeButton>\n//               <Modal.Title>Control AC</Modal.Title>\n//             </Modal.Header>\n//             <Modal.Body>\n//               <form class=\"form\">     \n//                     <br></br>\n//                         <InputLabel>On/Off</InputLabel>\n//                         <Select onChange={this.setOn} value={this.state.isOn}>\n//                             <MenuItem value=\"off\">Off</MenuItem>\n//                             <MenuItem value=\"on\">On</MenuItem>\n//                         </Select>\n//                         {tempSlider}\n//                         <Button variant=\"outlined\" color=\"primary\" onClick={this.onSubmit}>Set</Button>\n//               </form>\n//             </Modal.Body>\n//             <Modal.Footer>\n//               <Button variant=\"secondary\" onClick={props.close}>Close</Button>\n//             </Modal.Footer>\n//            </Modal.Dialog>\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n\nexport default modal;","map":{"version":3,"sources":["/home/swastik/project/dass05/src/FRONTEND/src/components/Modal.js"],"names":["Modal","React","Component","InputLabel","MenuItem","Select","Button","Slider","withStyles","makeStyles","axios","console","log","modal","props","transform","show","opacity","close","PrettoSlider","root","color","height","thumb","width","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","tempSlider"],"mappings":"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","sourcesContent":["\nimport {Modal} from 'react-bootstrap'\nimport React, { Component } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport Slider from '@material-ui/core/Slider';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport './control.css';\nimport axios from 'axios'\nimport './Modal.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconsole.log(\"YCK\")\nconst modal = (props) => {\n    return (\n      <div>\n        <div className=\"modal-wrapper\"\n        style={{\n          transform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n          opacity: props.show ? '1' : '0'\n      }}>\n        <Modal.Dialog>\n        <Modal.Header closeButton>\n          <Modal.Title>Control AC</Modal.Title>\n        </Modal.Header>\n      \n        <Modal.Body>\n         \n        </Modal.Body>\n      \n        <Modal.Footer>\n          <Button variant=\"outlined\" color=\"primary\" onClick={props.close}>Close</Button>\n         \n        </Modal.Footer>\n      </Modal.Dialog>\n        </div>\n        </div>\n    )\n}\nconst PrettoSlider = withStyles({\n  root: {\n      color: '#0041C2',\n      height: 5,\n  },\n  thumb: {\n      height: 20,\n      width: 20,\n      backgroundColor: '#0041C2',\n      border: '2px solid currentColor',\n      marginTop: -8,\n      marginLeft: -5,\n      '&:focus,&:hover,&$active': {\n          boxShadow: 'inherit',\n      },\n  },\n  active: {},\n  valueLabel: {\n      left: 'calc(-50% + 4px)',\n  },\n  track: {\n      height: 5,\n      borderRadius: 4,\n  },\n  rail: {\n      height: 5,\n      borderRadius: 4,\n  },\n})(Slider);\n\nvar tempSlider;\n\n// class modal extends Component {\n//   constructor(props){\n//     super(props)\n//     this.state={\n//       isOn: \"off\",\n//       tempvalue:20,\n//     };\n//   }\n//   render(){\n//     if (this.state.isOn == \"on\") {\n        \n//       tempSlider = \n//       <div>\n//           <InputLabel>Temperature</InputLabel>\n//           <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" defaultValue={20} min={16} max={30} onChange={this.setTemp} />\n//       </div>\n//   } else {\n//       tempSlider = <><br/><br/><br/></>\n//   }\n//     return (\n//       <div>\n//         <div className=\"modal-wrapper\" style={{transform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',opacity: props.show ? '1' : '0'}}>\n//             <Modal.Dialog>\n//             <Modal.Header closeButton>\n//               <Modal.Title>Control AC</Modal.Title>\n//             </Modal.Header>\n          \n//             <Modal.Body>\n//               <form class=\"form\">     \n//                     <br></br>\n//                         <InputLabel>On/Off</InputLabel>\n//                         <Select onChange={this.setOn} value={this.state.isOn}>\n//                             <MenuItem value=\"off\">Off</MenuItem>\n//                             <MenuItem value=\"on\">On</MenuItem>\n//                         </Select>\n                        \n\n//                         {tempSlider}\n\n//                         <Button variant=\"outlined\" color=\"primary\" onClick={this.onSubmit}>Set</Button>\n//               </form>\n//             </Modal.Body>\n          \n//             <Modal.Footer>\n//               <Button variant=\"secondary\" onClick={props.close}>Close</Button>\n            \n//             </Modal.Footer>\n//            </Modal.Dialog>\n//         </div>\n//       </div>\n//     )\n    \n//   }\n// }\nexport default modal;\n\n\n"]},"metadata":{},"sourceType":"module"}